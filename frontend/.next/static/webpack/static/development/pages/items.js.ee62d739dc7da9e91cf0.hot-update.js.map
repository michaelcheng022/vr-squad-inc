{"version":3,"file":"static/webpack/static/development/pages/items.js.ee62d739dc7da9e91cf0.hot-update.js","sources":["webpack:///./components/DeleteItem.js","webpack:///./components/Listings.js","webpack:///./pages/index.js","webpack:///./pages/items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_LISTINGS_QUERY } from './Listings';\n\nconst DELETE_LISTING_MUTATION= gql`\n  mutation DELETE_LISTING_MUTATION($id: ID!) {\n    deleteListing(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_LISTINGS_QUERY });\n    console.log(data, payload);\n    // 2. Filter the deleted item out of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_LISTINGS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                deleteItem();\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\n\nconst ALL_LISTINGS_QUERY = gql`\n  query ALL_LISTINGS_QUERY {\n    listings {\n      address\n      description\n      rooms\n      bath\n      lotSize\n      houseSize\n      price\n      user\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nclass Listings extends Component {\n  render() {\n    return (\n      <Center>\n        <Query\n          query={ALL_LISTINGS_QUERY}\n          // fetchPolicy=\"network-only\"\n          \n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>{data.listings.map(listing => <p>{listing.address}</p>)}</ItemsList>\n            );\n          }}\n        </Query>\n      </Center>\n    );\n  }\n}\n\nexport default Listings;\nexport { ALL_LISTINGS_QUERY };\n","import Listings from '../components/Listings';\n\nconst Home = props => (\n  <div>\n    <Listings />\n  </div>\n);\n\nexport default Home;\n","import Listings from './index';\n\nexport default Listings;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AA/BA;AACA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AAEA;AAeA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;;;;AAnBA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}