{"version":3,"file":"static/webpack/static/development/pages/listing.js.9c6989a4bbf90ef5278b.hot-update.js","sources":["webpack:///./components/ImageGallery.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Gallery from 'react-grid-gallery';\n\n\nclass ImageGallery extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            images: this.props.images\n        };\n    }\n\n    // onSelectImage = (index, image)  => {\n    //     var images = this.state.images.slice();\n    //     var img = images[index];\n    //     if(img.hasOwnProperty(\"isSelected\"))\n    //         img.isSelected = !img.isSelected;\n    //     else\n    //         img.isSelected = true;\n\n    //     this.setState({\n    //         images: images\n    //     });\n    // }\n    formatImages = (images) => {\n      const formatted = images.map((img) => {\n        let image = {\n          src: img,\n          thumbnail: img,\n          thumbnailWidth: 320,\n          thumbnailHeight: 200,\n        }\n        return image;\n      })\n      return formatted;\n    }\n    render () {\n        return (\n                <div style={{\n                    display: \"block\",\n                    minHeight: \"1px\",\n                    width: \"100%\",\n                    border: \"1px solid #ddd\",\n                    overflow: \"auto\"}}>\n                <Gallery\n            images={formatImages(this.state.images)}\n            enableImageSelection={false}\n            enableLightBox={false}\n                />\n                </div>\n        );\n    }\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            src: PropTypes.string.isRequired,\n            thumbnail: PropTypes.string.isRequired,\n            srcset: PropTypes.array,\n            caption: PropTypes.string,\n            thumbnailWidth: PropTypes.number.isRequired,\n            thumbnailHeight: PropTypes.number.isRequired,\n            isSelected: PropTypes.bool\n        })\n    ).isRequired\n};\n\n\n\nexport default ImageGallery; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AA7BA;AACA;AADA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAhDA;AACA;AAkDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAgBA;;;;A","sourceRoot":""}