{"version":3,"file":"static/webpack/static/development/pages/listings.js.4c3cba730c3ee8b650ed.hot-update.js","sources":["webpack:///./components/Listings.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Listing from './Listing';\n\nconst ALL_LISTINGS_QUERY = gql`\n  query ALL_LISTINGS_QUERY {\n    listings {\n      id\n      address\n      description\n      mainImage\n      rooms\n      bath\n      lotSize\n      houseSize\n      price\n      user {\n        id\n      }\n    }\n  }\n`;\n\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n\n  @media (max-width: 1300px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0 10vw;\n  }\n\n  @media (max-width: 1000px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0 10vw;\n  }\n`;\n\nclass Listings extends Component {\n  render() {\n    return (\n      <Center>\n        <Query\n          query={ALL_LISTINGS_QUERY}\n          fetchPolicy=\"network-only\"\n        >\n          {({ data, error, loading }) => {\n            console.log(data);\n            console.log(this.props.userId);\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>{data.listings.map(listing => <Listing item={listing} />)}</ItemsList>\n            );\n          }}\n        </Query>\n      </Center>\n    );\n  }\n}\n\nexport default Listings;\nexport { ALL_LISTINGS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAoBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAaA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;;;;AApBA;AACA;AAsBA;;;;;A","sourceRoot":""}